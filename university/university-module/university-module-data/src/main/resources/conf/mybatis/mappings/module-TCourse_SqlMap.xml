<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eshore.university.module.dao.impl.TCourseDAOImpl">


	<resultMap id="TCourseMap" type="com.eshore.university.module.pojo.TCourse">
				<result property="courseName" column="course_name" />
				<result property="courseCost" column="course_cost" />
				<result property="introduction" column="introduction" />
				<result property="state" column="state" />
				<result property="courseId" column="course_id" />
			</resultMap>

<select id="getStateCourse" resultMap="TCourseMap" parameterType="String">
	select * from t_course A where state = #{state,jdbcType=VARCHAR}
</select>
	
  <select id="select" resultMap="TCourseMap" useCache="true"> 
   SELECT 
   *
   FROM t_course A
  <where>	
  					<if test="courseName != null">
			 ( course_name = #{courseName,jdbcType=VARCHAR})
								</if>
						<if test="courseCost != null">
			 AND  ( course_cost = #{courseCost,jdbcType=DOUBLE})
								</if>
						<if test="introduction != null">
			 AND  ( introduction = #{introduction,jdbcType=VARCHAR})
								</if>
						<if test="state != null">
			 AND  ( state = #{state,jdbcType=VARCHAR})
								</if>
						<if test="courseId != null">
			 AND  ( course_id = #{courseId,jdbcType=INTEGER})
											</if>
			</where>
	    
  </select>  


	<select id="selectByKey" resultMap="TCourseMap"
		useCache="true">
		SELECT * FROM t_course
		WHERE course_id=#{courseId,jdbcType=INTEGER}
		
	</select>

	<select id="selectWithTranslation" resultMap="TCourseMap" useCache="true">
        SELECT
        *
        FROM t_course A
        <where>	
  					<if test="courseName != null">
			 ( course_name = #{courseName,jdbcType=VARCHAR})
								</if>
						<if test="courseCost != null">
			 AND  ( course_cost = #{courseCost,jdbcType=DOUBLE})
								</if>
						<if test="introduction != null">
			 AND  ( introduction = #{introduction,jdbcType=VARCHAR})
								</if>
						<if test="state != null">
			 AND  ( state = #{state,jdbcType=VARCHAR})
								</if>
						<if test="courseId != null">
			 AND  ( course_id = #{courseId,jdbcType=INTEGER})
											</if>
			</where>
        FOR UPDATE NOWAIT 
    </select>
    
	<update id="updateByKey"> 
    UPDATE t_course
    <set>
    		    		    				<if test="courseName != null">
			course_name=#{courseName,jdbcType=VARCHAR},
			</if>
			    		    				<if test="courseCost != null">
			course_cost=#{courseCost,jdbcType=DOUBLE},
			</if>
			    		    				<if test="introduction != null">
			introduction=#{introduction,jdbcType=VARCHAR},
			</if>
			    		    				<if test="state != null">
			state=#{state,jdbcType=VARCHAR},
			</if>
			    		    				<if test="courseId != null">
			course_id=#{courseId,jdbcType=INTEGER},
			</if>
		    </set>
    WHERE course_id=#{courseId,jdbcType=INTEGER}
   </update>  
 
   <delete id="deleteByKey"> 
    delete from t_course
    WHERE course_id=#{courseId,jdbcType=INTEGER}
   </delete>  

   <delete id="deleteBy"> 
    delete from t_course
   <where>
					    			    					<if test="courseName != null">
					 AND 	( course_name = #{courseName,jdbcType=VARCHAR})
									</if>
					    			    					<if test="courseCost != null">
					 AND 	( course_cost = #{courseCost,jdbcType=DOUBLE})
									</if>
					    			    					<if test="introduction != null">
					 AND 	( introduction = #{introduction,jdbcType=VARCHAR})
									</if>
					    			    					<if test="state != null">
					 AND 	( state = #{state,jdbcType=VARCHAR})
									</if>
					    			    					<if test="courseId != null">
					 AND 	( course_id = #{courseId,jdbcType=INTEGER})
									</if>
						<if test="extraCondition != null">
				AND ( ${extraCondition} )
			</if>
		</where>
   </delete>  
	<insert id="insert">
    INSERT INTO t_course
    (
 course_name
, course_cost
, introduction
, state
, course_id
    ) 
    VALUES
    (     	    	    		 #{courseName,jdbcType=VARCHAR}
			    	    		, #{courseCost,jdbcType=DOUBLE}
			    	    		, #{introduction,jdbcType=VARCHAR}
			    	    		, #{state,jdbcType=VARCHAR}
			    	    		, #{courseId,jdbcType=INTEGER}
			    ) 
   </insert>
	
</mapper>
